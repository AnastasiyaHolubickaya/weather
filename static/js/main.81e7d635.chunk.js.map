{"version":3,"sources":["utils/getDate.ts","components/Preloader/Preloader.module.css","../src sync /^/.*/.json$","components/searchComponent/FormControls.tsx","components/button/Button.tsx","components/searchComponent/Search.tsx","components/button/SplitButton.tsx","components/header/Header.tsx","api/api.ts","redux/classWeather.ts","redux/mapper.ts","redux/actionCreator.ts","components/Preloader/Preloader.tsx","pages/404Page/Page404.tsx","App.tsx","reportWebVitals.ts","redux/reducer.ts","redux/store.ts","index.tsx","utils/converterTemperature.ts","components/searchComponent/FormControls.module.css","components/header/header.module.css","components/searchComponent/search.module.css"],"names":["daysEn","daysRu","getDate","timestamp","date","Date","en","getDay","getMonth","getFullYear","getHours","getMinutes","ru","getNameDay","MS","module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","FormControl","children","meta","touched","error","showError","className","classes","undefined","spanError","Input","props","input","restprops","BootstrapButton","withStyles","root","boxShadow","textTransform","fontSize","color","padding","margin","border","lineHeight","backgroundColor","borderColor","Button","CustomizedButtons","handleOnClick","value","onClick","variant","disableRipple","SettingPageForm","reduxForm","form","handleSubmit","onSubmit","cl","Field","name","component","autoFocus","type","placeholder","i18next","t","Search","getWeather","formData","text","SplitButton","setLanguage","React","useState","open","setOpen","anchorRef","useRef","selectedIndex","setSelectedIndex","handleMenuItemClick","event","handleClose","current","contains","target","ButtonGroup","ref","aria-label","aria-controls","aria-expanded","aria-haspopup","prevOpen","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","style","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","MenuItem","selected","Header","setUnitTemp","handleChangeUnitTmp","cels","header","btn_style","size","ServerRequest","baseURL","api_key","cityName","fetch","this","then","data","json","latitude","lonlongitude","console","log","instance","Weather","coordinates","longitude","timezone","country","countryRu","sunrise","sunset","weatherList","deg","directionsWind","entries","key","start","end","icon","url","iconsUrl","abr","fullNamesCountry","i","length","alpha2","english","list","push","clouds","dt","dt_txt","sys","visibility","main","feels_like","converterTemperature","humidity","pressure","Math","round","temp","temp_max","temp_min","weather","description","getUrlIcon","wind","getWindDirection","gust","speed","mapper","response","setCountry","city","coord","lat","lon","setWeatherList","actions","lang","mess","init","Preloader","block","Page404","to","AsyncPages","StartPage","loadable","loader","loading","App","language","lng","resources","require","setLang","handleOnClickChangeBg","element","document","querySelector","setAttribute","bgImgs","floor","random","handleOnSelect","state","navigator","geolocation","getCurrentPosition","position","setUserLocation","coords","prevProps","prevState","snapshot","coordUserLocation","initialization","exact","path","render","dataWeather","celsius","Component","connect","app","currentData","inicialization","languageApp","dispatch","a","getInstance","getWeatherForCoord","getWeatherForCityName","cod","message","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","messageError","reducer","action","reducers","combineReducers","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","getElementById","kelvin","ABSOLUT_ZERO","n","FREEZING_POINT_OF_WATER"],"mappings":"oGACA,wEAAMA,EAAS,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAC5EC,EAAS,CAAC,qEAAe,qEAAe,6CAAW,iCAAS,6CAAW,6CAAW,8CAC3EC,EAAU,SAACC,GACpB,IAAIC,EAAa,IAAIC,KAAKF,GAK1B,MAAO,CACHG,GAAG,GAAD,OAAKN,EAAOI,EAAKG,UAAjB,aAA+BH,EAAKF,UAApC,YAJW,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAIhEE,EAAKI,YAA/D,YAA8EJ,EAAKK,cAAnF,aAAqGL,EAAKM,WAA1G,YAAwHN,EAAKO,aAA7H,KACFC,GAAG,GAAD,OAAKX,EAAOG,EAAKG,UAAjB,aAA+BH,EAAKF,UAApC,YAJW,CAAC,uCAAU,6CAAW,2BAAQ,uCAAU,qBAAO,2BAAQ,2BAAQ,uCAAU,mDAAY,6CAAW,uCAAU,8CAI3DE,EAAKI,YAA/D,YAA8EJ,EAAKK,cAAnF,aAAqGL,EAAKM,WAA1G,YAAwHN,EAAKO,aAA7H,OAGGE,EAAa,SAACV,GAAmC,IACpDW,EAAK,IACPV,EAAa,IAAIC,KAAKF,EAAUW,GAEpC,MAAO,CACHR,GAAG,GAAD,OAAKN,EAAOI,EAAKG,UAAjB,aAA+BH,EAAKF,WACtCU,GAAG,GAAD,OAAKX,EAAOG,EAAKG,UAAjB,aAA+BH,EAAKF,c,oBCnB9Ca,EAAOC,QAAU,CAAC,MAAQ,2B,gECD1B,IAAIC,EAAM,CACT,YAAa,IACb,kBAAmB,GACnB,aAAc,GACd,YAAa,IACb,uBAAwB,IAIzB,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBN,EAAOC,QAAUE,EACjBA,EAAeE,GAAK,K,k9DCjBdU,EAAuC,SAAC,GAAwC,IAAvCC,EAAsC,EAAtCA,SAAsC,IAA5BC,KAAOC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MAC/DC,EAAYF,GAAWC,EAC7B,OACI,sBAAKE,UAAWD,EAAYE,IAAQH,WAAQI,EAA5C,UACKP,EAAS,uBACTI,GAAa,sBAAMC,UAAWC,IAAQE,UAAzB,SAAqCL,QAMlDM,EAAqC,SAACC,GAC/C,IAAOC,EAA6BD,EAA7BC,MAAgBC,GAAaF,EAAtBT,KAAd,YAAoCS,EAApC,IACA,OAAO,eAAC,EAAD,2BAAiBA,GAAjB,kBAAyB,6DAAWC,GAAWC,GAAtB,IAAiCP,UAAWC,IAAQK,c,yBCjBlFE,EAAkBC,YAAW,CAC/BC,KAAM,CACFC,UAAW,OACXC,cAAe,OACfC,SAAU,GACVC,MAAO,UACPC,QAAS,UACTC,OAAQ,OACRC,OAAQ,YACRC,WAAY,IACZC,gBAAiB,uBACjBC,YAAa,UAEb,UAAW,CACPD,gBAAiB,UACjBC,YAAa,UACbT,UAAW,OACXG,MAAO,WAEX,WAAY,CACRH,UAAW,OACXQ,gBAAiB,UACjBC,YAAa,aAtBDX,CAyBrBY,KAQUC,EAAiD,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,cAAeC,EAAW,EAAXA,MAE3E,OACI,8BACI,cAAChB,EAAD,CAAiBiB,QAASF,EAAeG,QAAQ,YAAYZ,MAAM,UAAUa,eAAa,EAA1F,SAA4FH,OCMlGI,EAAkBC,YAAsC,CAC1DC,KAAM,UADcD,EAvBqD,SAAC,GAA4B,IAA3BE,EAA0B,EAA1BA,aAAcjC,EAAY,EAAZA,MAEzF,OACI,8BACI,uBAAMkC,SAAUD,EAAc/B,UAAWiC,IAAGH,KAA5C,UACI,cAACI,EAAA,EAAD,CAAOC,KAAM,OAAQnC,UAAWiC,IAAG3B,MAC5B8B,UAAWhC,EACXiC,WAAS,EACTC,KAAK,OACLC,YAAaC,IAAQC,EAAE,kBAGzB3C,GAAS,8BAAMA,IAEpB,cAAC,EAAD,CACI0B,MAAOgB,IAAQC,EAAE,cAEjBlB,cAAeQ,EAHnB,uBAiBHW,EAAmC,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WAM9C,OACI,cAACf,EAAD,CAAiBI,SALJ,SAACY,GACdD,EAAW,KAAM,KAAMC,EAASC,U,uEC5C3BC,EAA2C,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YACtD,EAAwBC,IAAMC,UAAS,GAAvC,mBAAOC,EAAP,KAAaC,EAAb,KACMC,EAAYJ,IAAMK,OAAuB,MAC/C,EAA0CL,IAAMC,SAAS,MAAzD,mBAAOK,EAAP,KAAsBC,EAAtB,KAEMC,EAAsB,SACxBC,EACAzE,GAEAuE,EAAiBvE,GACjB+D,EAAY/D,GACZmE,GAAQ,IAONO,EAAc,SAACD,GACbL,EAAUO,SAAWP,EAAUO,QAAQC,SAASH,EAAMI,SAG1DV,GAAQ,IAGZ,OACI,gCACI,cAACW,EAAA,EAAD,CAAapC,QAAQ,YAAYZ,MAAM,UAAUiD,IAAKX,EAAWY,aAAW,eAA5E,SACI,cAAE,EAAF,CACIxC,MAAK,UAAK8B,EAAL,WACLW,gBAAef,EAAO,yBAAsBhD,EAC5CgE,gBAAehB,EAAO,YAAShD,EAC/B8D,aAAW,wBACXG,gBAAc,OACd5C,cApBK,WACjB4B,GAAQ,SAACiB,GAAD,OAAeA,UAuBnB,cAACC,EAAA,EAAD,CAAQnB,KAAMA,EAAMoB,SAAUlB,EAAUO,QAASY,UAAMrE,EAAWsE,YAAU,EAACC,eAAa,EAA1F,SACK,gBAAEC,EAAF,EAAEA,gBAAiBC,EAAnB,EAAmBA,UAAnB,OACG,cAACC,EAAA,EAAD,2BACQF,GADR,IAEIG,MAAO,CACHC,gBAA+B,WAAdH,EAAyB,aAAe,iBAHjE,SAMI,cAACI,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAmBC,YAAavB,EAAhC,SACI,eAACwB,EAAA,EAAD,CAAUlG,GAAG,oBAAb,UACI,cAACmG,EAAA,EAAD,CACIC,SAAU,OAAS9B,EACnBtE,GAAI,KACJyC,QAAS,SAACgC,GAAD,OAAWD,EAAoBC,EAAO,OAC/CjC,MAAO,KAJX,gBASA,cAAC2D,EAAA,EAAD,CACIC,SAAU,OAAS9B,EACnBtE,GAAI,KACJyC,QAAS,SAACgC,GAAD,OAAWD,EAAoBC,EAAO,OAC/CjC,MAAO,KAJX,iCCzDvB6D,EAAsC,SAAC,GAA2D,IAA1D9D,EAAyD,EAAzDA,cAAeoB,EAA0C,EAA1CA,WAAYI,EAA8B,EAA9BA,YAAauC,EAAiB,EAAjBA,YAEnFC,EAAsB,SAACC,GACzBF,EAAYE,IAGhB,OACI,yBAAQxF,UAAWiC,IAAGwD,OAAtB,UACI,8BAEI,eAAC3B,EAAA,EAAD,CAAa9D,UAAWiC,IAAGyD,UAAWC,KAAK,QAA3C,UACI,cAAC,EAAD,CACI5C,YAAaA,IAEjB,cAAC,EAAD,CACIxB,cAAeA,EACfC,MAAO,WAGX,cAAC,EAAD,CACID,cAAe,kBAAMgE,GAAoB,IACzC/D,MAAO,UAEX,cAAC,EAAD,CACID,cAAe,kBAAMgE,GAAoB,IACzC/D,MAAO,eAInB,cAAC,EAAD,CACImB,WAAYA,Q,0DC9CfiD,EAAb,WAKI,aAAuB,yBAJfC,QAAU,oDAII,KAHdC,QAAU,mCAFtB,yDAgBI,SAAsBC,GAClB,OAAOC,MAAM,GAAD,OAAIC,KAAKJ,QAAT,aAAqBE,EAArB,kBAAuCE,KAAKH,UACnDI,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAC,GAEF,OAAOA,OArBvB,gCAyBI,SAAmBE,EAAiBC,GAChC,OAAON,MAAM,GAAD,OAAIC,KAAKJ,QAAT,eAAuBQ,EAAvB,gBAAuCC,EAAvC,kBAA6DL,KAAKH,UACzEI,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAC,GAEF,OADAI,QAAQC,IAAIL,GACLA,QA9BvB,0BAQI,WACI,MAAsC,kBAA3BP,EAAca,WAGzBb,EAAca,SAAW,IAAIb,GAFlBA,EAAca,aAVjC,KAAab,EAGMa,c,8BCGNC,GAAb,iDACWX,SAAW,GADtB,KAEWY,YAAc,CACjBN,SAAU,EACVO,UAAW,GAJnB,KAMWC,SAAW,EANtB,KAOWC,QAAU,GAPrB,KAQWC,UAAY,GARvB,KASWC,QAAU,GATrB,KAUWC,OAAS,GAVpB,KAWWC,YAAmB,GAX9B,oDAcI,SAAiBC,GACb,IAAIhI,EAAI,GACR,GAAIiI,EAAgB,CAChB,cAA2B5H,OAAO6H,QAAQD,GAA1C,eAA2D,CAAtD,0BAAOE,EAAP,KAAY9F,EAAZ,KACG2F,EAAM3F,EAAM+F,OAASJ,GAAO3F,EAAMgG,MAClCrI,EAAI,CAACjB,GAAIoJ,EAAK9I,GAAIgD,EAAMhD,KAGhC,OAAOW,KAtBnB,wBA0BI,SAAWsI,GAEP,IADA,IAAIC,EAAM,GACV,MAA2BlI,OAAO6H,QAAQM,GAA1C,eAAqD,CAAhD,0BAAOL,EAAP,KAAY9F,EAAZ,KACGiG,IAASH,IACTI,EAAMlG,GAGd,OAAOkG,IAjCf,wBAqCI,SAAWE,EAAaC,GACpB,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAiBE,OAAQD,IACrCF,IAAQC,EAAiBC,GAAGE,SAC5B/B,KAAKa,QAAUe,EAAiBC,GAAGG,QACnChC,KAAKc,UAAYc,EAAiBC,GAAG3F,QAzCrD,4BA+CI,SAAe+F,GAEXjC,KAAKiB,YAAYiB,KAAK,CAClBC,OAAQF,EAAKE,OACbC,GAAIH,EAAKG,GACTC,OAAQJ,EAAKI,OACbC,IAAKL,EAAKK,IACVC,WAAYN,EAAKM,WAAa,IAC9BC,KAAM,CACFC,WAAYC,YAAqBT,EAAKO,KAAKC,YAAY,GACvDE,SAAUV,EAAKO,KAAKG,SACpBC,SAAUC,KAAKC,MAVP,IAUab,EAAKO,KAAKI,UAC/BG,KAAML,YAAqBT,EAAKO,KAAKO,MAAM,GAC3CC,SAAUN,YAAqBT,EAAKO,KAAKQ,UAAU,GACnDC,SAAUP,YAAqBT,EAAKO,KAAKS,UAAU,IAEvDC,QAAS,CAAC,CACNC,YAAalB,EAAKiB,QAAQ,GAAGC,YAC7B3B,KAAMxB,KAAKoD,WAAWnB,EAAKiB,QAAQ,GAAG1B,MACtCzI,GAAIkJ,EAAKiB,QAAQ,GAAGnK,GACpByJ,KAAMP,EAAKiB,QAAQ,GAAGV,OAE1Ba,KAAM,CACFnC,IAAKlB,KAAKsD,iBAAiBrB,EAAKoB,KAAKnC,KACrCqC,KAAMtB,EAAKoB,KAAKE,KAChBC,MAAOvB,EAAKoB,KAAKG,aAxEjC,K,SCHaC,GAAS,SAACC,GACnB,IAAIxD,EAAO,IAAIO,GACfP,EAAKyD,WAAWD,EAASE,KAAK/C,QAASe,IACvC1B,EAAKJ,SAAW4D,EAASE,KAAK1H,KAC9BgE,EAAKU,SAAW8C,EAASE,KAAKhD,SAC9BV,EAAKQ,YAAYN,SAAWsD,EAASE,KAAKC,MAAMC,IAChD5D,EAAKQ,YAAYC,UAAY+C,EAASE,KAAKC,MAAME,IACjD,IAAK,IAAIlC,EAAI,EAAGA,EAAI6B,EAASzB,KAAKH,OAAQD,IACtC3B,EAAK8D,eAAeN,EAASzB,KAAKJ,IAEtC,OAAO3B,G,UCLE+D,GACO,SAACC,GAAD,MAAmB,CAAC7H,KAAM,WAAY6H,SAD7CD,GAEO,SAAC1E,GAAD,MAAoB,CAAClD,KAAM,gBAAiBkD,SAFnD0E,GAGO,SAAC/D,GAAD,MAAgB,CAAC7D,KAAM,mBAAoB6D,SAHlD+D,GAIG,SAACE,GAAD,MAAmB,CAAC9H,KAAM,cAAe8H,SAJ5CF,GAKK,SAACH,EAAaC,EAAYhM,GAA1B,MAA2D,CACrEsE,KAAM,oBACNwH,MAAO,CAACC,MAAKC,OACbhM,KAAMA,IARDkM,GAUO,SAACG,GAAD,MAAoB,CAAC/H,KAAM,qBAAsB+H,S,qBCPtDC,GAPG,WACd,OACI,qBAAKtK,UAAWC,KAAQsK,MAAxB,gICDKC,GAAU,WAEnB,OACI,8BACI,+EAEI,cAAC,IAAD,CAAMC,GAAG,IAAT,2BCcVC,GAAa,CACfC,UAAWC,IAAS,CAChBC,OAAQ,kBAAM,qDACdC,QAASR,MAIXS,G,kDACF,WAAY1K,GAAa,IAAD,8BACpB,cAAMA,IAIV0C,YAAc,SAACiI,GACXxI,IAAQ6H,KAAK,CACTY,IAAKD,EACLE,UAAWC,OAAQ,YAAKH,EAAN,YAEtB,EAAK3K,MAAM+K,QAAQJ,IAVC,EA4BxBK,sBAAwB,WACpB,IAAIC,EAAUC,SAASC,cAAc,QACzB,OAAZF,GAAoBA,EAAQG,aAAa,QAArB,+CAAsE,EAAKpL,MAAMqL,OAAO5C,KAAK6C,MAAM7C,KAAK8C,SAAW,EAAKvL,MAAMqL,OAAO3D,SAArI,QA9BA,EAgCxB8D,eAAiB,SAAC1B,GACd,EAAKpH,YAAYoH,IA/BjB,EAAK2B,MAAQ,GAFO,E,qDAcxB,WAA2B,IAAD,OACtB7F,KAAKlD,YAAYkD,KAAK5F,MAAM8J,MACxB4B,UAAUC,aACVD,UAAUC,YAAYC,oBAAmB,SAACC,GACtC,EAAK7L,MAAM8L,gBAAgBD,EAASE,OAAO/F,SAAU6F,EAASE,OAAOxF,UAAWsF,EAASnO,gB,gCAKrG,SAAmBsO,EAA+DC,EAAyBC,GACnGtG,KAAK5F,MAAMmM,kBAAkBzC,MAAQsC,EAAUG,kBAAkBzC,KAAO9D,KAAK5F,MAAMmM,kBAAkBxC,MAAQqC,EAAUG,kBAAkBxC,KACzI/D,KAAK5F,MAAMsC,WAAWsD,KAAK5F,MAAMmM,kBAAkBzC,IAAK9D,KAAK5F,MAAMmM,kBAAkBxC,IAAK,Q,oBAYlG,WAAU,IAAD,OACL,OAAK/D,KAAK5F,MAAMoM,eAKZ,sBAAKzM,UAAU,MAAf,UACI,cAAC,EAAD,CAAQuB,cAAe0E,KAAKoF,sBACpB1I,WAAYsD,KAAK5F,MAAMsC,WACvBI,YAAakD,KAAK4F,eAClBvG,YAAaW,KAAK5F,MAAMiF,cAEhC,eAAC,IAAD,WACI,cAAC,IAAD,CAAOoH,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAC1B,cAAClC,GAAWC,UAAZ,CACIkC,YAAa,EAAKxM,MAAMwM,YACxB7O,KAAM,EAAKqC,MAAMrC,KACjBmM,KAAM,EAAK9J,MAAM8J,KACjB2C,QAAS,EAAKzM,MAAMyM,aAE5B,cAAC,IAAD,CAAOH,KAAM,IAAKC,OAAQ,kBAAM,cAAC,GAAD,aAlBjC,cAAC,GAAD,Q,GAxCDG,aA4EHC,gBAVS,SAAClB,GAAD,MAA0B,CAC9CU,kBAAmBV,EAAMmB,IAAIT,kBAC7BK,YAAaf,EAAMmB,IAAIJ,YACvB7O,KAAM8N,EAAMmB,IAAIC,YAChBT,eAAgBX,EAAMmB,IAAIE,eAC1BzB,OAAQI,EAAMmB,IAAIvB,OAClBvB,KAAM2B,EAAMmB,IAAIG,YAChBN,QAAShB,EAAMmB,IAAIH,WAGiB,CACpCX,gBHpE2B,SAACpC,EAAaC,EAAajM,GAA3B,8CAA4D,WAAOsP,GAAP,SAAAC,EAAA,sDAEvFD,EAASnD,GAAqBH,EAAKC,EAAKlM,aAAQC,KAFuC,2CAA5D,uDGoEV4E,WHvFK,eAAC0D,EAAD,uDAA2B,KAAMO,EAAjC,uDAA4D,KAAMb,EAAlE,uDAA4F,KAA5F,8CAAgH,WAAOsH,GAAP,eAAAC,EAAA,yDAGrH,OAAbjH,GAAmC,OAAdO,EAH6G,gCAIjHhB,EAAc2H,cAAcC,mBAAmBnH,EAAUO,GAJwD,OAIlI+C,EAJkI,iCAM9G,OAAb5D,EAN2H,iCAOjHH,EAAc2H,cAAcE,sBAAsB1H,GAP+D,OAOlI4D,EAPkI,eAUjH,QAAjBA,EAAS+D,KACTL,EAASnD,IAAuB,IAChCmD,EAASnD,GAAuBR,GAAOC,MAEvC0D,EAASnD,GAAmBP,EAASgE,UAd6F,4CAAhH,uDGuFOvC,QH/DV,SAACjB,GAAD,8CAA4B,WAAOkD,GAAP,SAAAC,EAAA,sDAC/CD,EAASnD,GAAuBC,IADe,2CAA5B,uDG+DmB7E,YH5Df,SAACE,GAAD,8CAA6B,WAAO6H,GAAP,SAAAC,EAAA,sDACpDD,EAASnD,GAAuB1E,IADoB,2CAA7B,wDG2DZwH,CAGdjC,ICjGc6C,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqB5H,MAAK,YAAkD,IAA/C6H,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,6BCNVO,GAAe,CACftB,SAAS,EACTM,YAAa,KACbP,YAAa,CACTlG,YAAa,CAACN,SAAU,EAAGO,UAAW,GACtCE,QAAS,GACTC,UAAW,GACXhB,SAAU,GACVc,SAAU,EACVG,QAAS,GACTC,OAAQ,GACRC,YAAa,IAEjBmH,aAAc,GACd7B,kBAAmB,CACfzC,IAAK,EACLC,IAAK,GAETkD,YAAa,CACThP,GAAI,GACJM,GAAI,IAER2O,gBAAgB,EAChBzB,OAAQ,CAAC,eAAgB,eAAgB,eAAgB,eAAgB,iBA4C9D4C,GAvCC,WAAkE,IAAjExC,EAAgE,uDAAxDsC,GAAcG,EAA0C,uCAC7E,OAAQA,EAAOjM,MACX,IAAK,mBACD,OAAO,2BACAwJ,GADP,IAEIe,YAAa0B,EAAOpI,OAE5B,IAAK,cACD,OAAO,2BACA2F,GADP,IAEIuC,aAAcE,EAAOnE,OAG7B,IAAK,oBACD,OAAO,2BACA0B,GADP,IAEIU,kBAAmB+B,EAAOzE,MAC1BoD,YAAaqB,EAAOvQ,OAE5B,IAAK,qBACD,OAAO,2BACA8N,GADP,IAEIqB,gBAAgB,IAExB,IAAK,WACD,OAAO,2BACArB,GADP,IAEIsB,YAAamB,EAAOpE,OAE5B,IAAK,gBACD,OAAO,2BACA2B,GADP,IAEIgB,QAASyB,EAAO/I,OAExB,QACI,OAAOsG,ICzDf0C,GAAWC,aACX,CACI3M,KAAM4M,KACNzB,IAAKqB,KAaPK,GAAmBC,OAAOC,sCAAuCC,KAKxDC,GAJDC,aAAYR,GAAUG,GAChCM,aAAgBC,QClBpBC,IAASvC,OACL,cAAC,IAAD,UACI,cAAC,IAAD,CAAUmC,MAAOA,GAAjB,SACI,cAAC,GAAD,QAGVxD,SAAS6D,eAAe,SAM1BxB,M,gCCrBA,kCAAQ,IAAMjF,EAAuB,SAACK,GAA+B,IAAlBqG,EAAiB,wDAC5DC,GAAiB,OACjBC,EAAI,IACJC,EAA0B,GAC9B,OAASH,EAAUvG,KAAKC,MAAMC,IAASsG,GAAiBxG,KAAKC,MAAOC,EAAKuG,EAAGC,K,m1ECHhF7Q,EAAOC,QAAU,CAAC,MAAQ,4BAA4B,MAAQ,4BAA4B,UAAY,kC,m0nGCAtGD,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,KAAO,wB","file":"static/js/main.81e7d635.chunk.js","sourcesContent":["\r\nconst daysEn = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\nconst daysRu = ['Воскресенье', 'Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота'];\r\nexport const getDate = (timestamp: number) => {\r\n    let date: Date = new Date(timestamp);\r\n\r\n    const monthsEn = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n    const monthsRu = ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'];\r\n\r\n    return {\r\n        en: `${daysEn[date.getDay()]}, ${date.getDate()} ${monthsEn[date.getMonth()]} ${date.getFullYear()}, ${date.getHours()}:${date.getMinutes()} `,\r\n        ru: `${daysRu[date.getDay()]}, ${date.getDate()} ${monthsRu[date.getMonth()]} ${date.getFullYear()}, ${date.getHours()}:${date.getMinutes()} `\r\n    };\r\n};\r\nexport const getNameDay = (timestamp: number, timezone=0) => {\r\n    const MS = 1000;\r\n    let date: Date = new Date(timestamp*MS);\r\n\r\n    return {\r\n        en: `${daysEn[date.getDay()]}, ${date.getDate()}`,\r\n        ru: `${daysRu[date.getDay()]}, ${date.getDate()}`\r\n    };\r\n};\r\n/*\r\nexport const getTime = (timestamp: number) => {\r\n    const MS = 1000;\r\n    let date: Date = new Date(timestamp*MS);\r\n\r\n    return `${date.getHours()}:${date.getMinutes()}`\r\n};*/\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Preloader_block__do3O4\"};","var map = {\n\t\"./en.json\": 253,\n\t\"./iconsUrl.json\": 94,\n\t\"./iso.json\": 95,\n\t\"./ru.json\": 254,\n\t\"./windDirection.json\": 73\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 252;","import React from \"react\";\r\nimport classes from \"./FormControls.module.css\"\r\nimport {WrappedFieldMetaProps, WrappedFieldProps} from \"redux-form\";\r\n\r\n\r\ntype formPropsType = {\r\n    meta: WrappedFieldMetaProps\r\n}\r\n\r\nconst FormControl: React.FC<formPropsType> = ({children, meta: {touched, error}}) => {\r\n    const showError = touched && error;\r\n    return (\r\n        <div className={showError ? classes.error : undefined}>\r\n            {children}<br/>\r\n            {showError && <span className={classes.spanError}>{error}</span>}\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport const Input: React.FC<WrappedFieldProps> = (props) => {\r\n    const {input, meta, ...restprops} = props;\r\n    return <FormControl {...props}> <input {...input} {...restprops} className={classes.input}/></FormControl>\r\n\r\n};\r\n","import React from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nconst BootstrapButton = withStyles({\r\n    root: {\r\n        boxShadow: 'none',\r\n        textTransform: 'none',\r\n        fontSize: 14,\r\n        color: \"#000000\",\r\n        padding: '3px 5px',\r\n        margin: \"10px\",\r\n        border: '1px solid',\r\n        lineHeight: 1.5,\r\n        backgroundColor: 'rgba(255,255,255,.5)',\r\n        borderColor: \"#000000\",\r\n\r\n        '&:hover': {\r\n            backgroundColor: '#8CBFEF',\r\n            borderColor: '#8CBFEF',\r\n            boxShadow: 'none',\r\n            color: \"#ffffff\"\r\n        },\r\n        '&:active': {\r\n            boxShadow: 'none',\r\n            backgroundColor: '#8CBFEF',\r\n            borderColor: '#8CBFEF',\r\n        },\r\n    },\r\n})(Button);\r\n\r\n\r\ninterface IMyComponentState {\r\n    handleOnClick?: () => void\r\n    value?: string\r\n}\r\n\r\nexport const CustomizedButtons: React.FC<IMyComponentState> = ({handleOnClick, value}) => {\r\n\r\n    return (\r\n        <div>\r\n            <BootstrapButton onClick={handleOnClick} variant=\"contained\" color=\"primary\" disableRipple>{value}\r\n            </BootstrapButton>\r\n        </div>\r\n    );\r\n};","import React from \"react\";\r\nimport cl from \"./search.module.css\"\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Input} from \"./FormControls\";\r\nimport i18next from \"i18next\";\r\nimport {CustomizedButtons} from \"../button/Button\";\r\n\r\n\r\n\r\ntype ownPropsType = {}\r\ntype formDataType = {\r\n    text: string\r\n}\r\ntype validatorType = (value: string) => string | undefined\r\n\r\n\r\nconst validateSumbol = (): validatorType => (value) => {\r\n    if (value !== undefined) {\r\n        let regex = new RegExp(/^[a-zа-яё]+$/i);\r\n        if (!regex.test(value)) return (`${i18next.t('mess_novalid')}`);\r\n    }\r\n    return undefined;\r\n};\r\nconst validate = validateSumbol();\r\n\r\nconst formSubmit: React.FC<InjectedFormProps<formDataType> & ownPropsType> = ({handleSubmit, error,}) => {\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit} className={cl.form}>\r\n                <Field name={\"text\"} className={cl.input}\r\n                       component={Input}\r\n                       autoFocus\r\n                       type=\"text\"\r\n                       placeholder={i18next.t('placeholder')}\r\n                       /*validate={[validate]}*//>\r\n                {\r\n                    !error && <div>{error}</div>\r\n                }\r\n                <CustomizedButtons\r\n                    value={i18next.t('btn_search')}\r\n                    // @ts-ignore\r\n                    handleOnClick={handleSubmit}\r\n                > </CustomizedButtons>\r\n            </form>\r\n        </div>\r\n    )\r\n};\r\nconst SettingPageForm = reduxForm<formDataType, ownPropsType>({\r\n    form: 'search'\r\n})(formSubmit);\r\n\r\ninterface IComponentType {\r\n    getWeather: any\r\n}\r\n\r\nexport const Search: React.FC<IComponentType> = ({getWeather}) => {\r\n\r\n    const onSubmit = (formData: formDataType) => {\r\n        getWeather(null, null, formData.text);\r\n    };\r\n\r\n    return (\r\n        <SettingPageForm onSubmit={onSubmit}/>\r\n    )\r\n};\r\n\r\n\r\n","import React from 'react';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport {CustomizedButtons} from \"./Button\";\r\n\r\n\r\ninterface IMyComponentState {\r\n    setLanguage: (n: string) => void\r\n}\r\n\r\nexport const SplitButton: React.FC<IMyComponentState> = ({setLanguage}) => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const anchorRef = React.useRef<HTMLDivElement>(null);\r\n    const [selectedIndex, setSelectedIndex] = React.useState('en');\r\n\r\n    const handleMenuItemClick = (\r\n        event: React.MouseEvent<HTMLLIElement, MouseEvent>,\r\n        id: string\r\n    ) => {\r\n        setSelectedIndex(id);\r\n        setLanguage(id);\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleToggle = () => {\r\n        setOpen((prevOpen) => !prevOpen);\r\n    };\r\n\r\n    const handleClose = (event: React.MouseEvent<Document, MouseEvent>) => {\r\n        if (anchorRef.current && anchorRef.current.contains(event.target as HTMLElement)) {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <ButtonGroup variant=\"contained\" color=\"primary\" ref={anchorRef} aria-label=\"split button\">\r\n                < CustomizedButtons\r\n                    value={`${selectedIndex} ▾`}\r\n                    aria-controls={open ? 'split-button-menu' : undefined}\r\n                    aria-expanded={open ? 'true' : undefined}\r\n                    aria-label=\"select merge strategy\"\r\n                    aria-haspopup=\"menu\"\r\n                    handleOnClick={handleToggle}\r\n                >\r\n                </CustomizedButtons>\r\n            </ButtonGroup>\r\n            <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\r\n                {({TransitionProps, placement}) => (\r\n                    <Grow\r\n                        {...TransitionProps}\r\n                        style={{\r\n                            transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom',\r\n                        }}\r\n                    >\r\n                        <Paper>\r\n                            <ClickAwayListener onClickAway={handleClose}>\r\n                                <MenuList id=\"split-button-menu\">\r\n                                    <MenuItem\r\n                                        selected={\"en\" === selectedIndex}\r\n                                        id={\"en\"}\r\n                                        onClick={(event) => handleMenuItemClick(event, \"en\")}\r\n                                        value={\"en\"}\r\n\r\n                                    >\r\n                                        en\r\n                                    </MenuItem>\r\n                                    <MenuItem\r\n                                        selected={\"ru\" === selectedIndex}\r\n                                        id={\"ru\"}\r\n                                        onClick={(event) => handleMenuItemClick(event, \"ru\")}\r\n                                        value={\"ru\"}\r\n\r\n                                    >\r\n                                        ru\r\n                                    </MenuItem>\r\n                                </MenuList>\r\n                            </ClickAwayListener>\r\n                        </Paper>\r\n                    </Grow>\r\n                )}\r\n            </Popper>\r\n        </div>\r\n    );\r\n};","import React from \"react\";\r\nimport cl from \"./header.module.css\"\r\nimport {Search} from \"../searchComponent/Search\";\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport {CustomizedButtons} from \"../button/Button\";\r\nimport {SplitButton} from \"../button/SplitButton\";\r\n\r\n\r\ninterface IMyComponentState {\r\n    handleOnClick: any\r\n    getWeather: any\r\n    setLanguage: (lang: string) => void\r\n    setUnitTemp: (cels: boolean) => void\r\n}\r\n\r\n\r\nexport const Header: React.FC<IMyComponentState> = ({handleOnClick, getWeather, setLanguage, setUnitTemp}) => {\r\n\r\n    const handleChangeUnitTmp = (cels: boolean) => {\r\n        setUnitTemp(cels)\r\n    };\r\n\r\n    return (\r\n        <header className={cl.header}>\r\n            <div>\r\n\r\n                <ButtonGroup className={cl.btn_style} size=\"small\">\r\n                    <SplitButton\r\n                        setLanguage={setLanguage}\r\n                    />\r\n                    <CustomizedButtons\r\n                        handleOnClick={handleOnClick}\r\n                        value={\"☀\"}\r\n                    />\r\n\r\n                    <CustomizedButtons\r\n                        handleOnClick={() => handleChangeUnitTmp(false)}\r\n                        value={\"°F\"}\r\n                    />\r\n                    <CustomizedButtons\r\n                        handleOnClick={() => handleChangeUnitTmp(true)}\r\n                        value={\"°C\"}\r\n                    />\r\n                </ButtonGroup>\r\n            </div>\r\n            <Search\r\n                getWeather={getWeather}\r\n            />\r\n        </header>\r\n    )\r\n};","export class ServerRequest {\r\n    private baseURL = \"https://api.openweathermap.org/data/2.5/forecast?\";\r\n    private api_key = \"6f4d4317a3c560906fa4cb8674063b92\";\r\n    private static instance: ServerRequest;\r\n\r\n    private constructor() {\r\n    };\r\n\r\n    static getInstance(): ServerRequest {\r\n        if (typeof ServerRequest.instance === 'object') {\r\n            return ServerRequest.instance;\r\n        }\r\n        ServerRequest.instance = new ServerRequest();\r\n        return ServerRequest.instance;\r\n    }\r\n\r\n    getWeatherForCityName(cityName: string) {\r\n        return fetch(`${this.baseURL}q=${cityName}&appid=${this.api_key}`)\r\n            .then(data => data.json())\r\n            .then(data => {\r\n\r\n                return data;\r\n            })\r\n    }\r\n\r\n    getWeatherForCoord(latitude:number, lonlongitude:number) {\r\n        return fetch(`${this.baseURL}lat=${latitude}&lon=${lonlongitude}&appid=${this.api_key}`)\r\n            .then(data => data.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                return data;\r\n            })\r\n    }\r\n\r\n    /*getFileCountry() {\r\n        return fetch('iso.json')\r\n           .then(data =>  data.json())\r\n            .then(data => {\r\n                return console.log(data);\r\n            })\r\n    }\r\n    getFileDescriptionWind() {\r\n        return fetch(\"windDirection.json\")\r\n            .then(data => data.json())\r\n            .then(data => {\r\n                return console.log(data) ;\r\n            })\r\n    }\r\n    getUrlIconsWeather() {\r\n        return fetch(\"iconsUrl.json\")\r\n            .then(data => data.json())\r\n            .then(data => {\r\n                return data;\r\n            })\r\n    }*/\r\n}\r\n\r\n","import directionsWind from '../windDirection.json';\r\nimport iconsUrl from '../iconsUrl.json';\r\nimport {converterTemperature} from \"../utils/converterTemperature\";\r\nimport {listType} from \"../types/types\";\r\n\r\n\r\nexport class Weather {\r\n    public cityName = \"\";\r\n    public coordinates = {\r\n        latitude: 0,\r\n        longitude: 0\r\n    };\r\n    public timezone = 0;\r\n    public country = \"\";\r\n    public countryRu = \"\";\r\n    public sunrise = '';\r\n    public sunset = '';\r\n    public weatherList: any = [];\r\n\r\n\r\n    getWindDirection(deg: number) {\r\n        let o = {};\r\n        if (directionsWind) {\r\n            for (const [key, value] of Object.entries(directionsWind)) {\r\n                if (deg > value.start && deg <= value.end) {\r\n                    o = {en: key, ru: value.ru}\r\n                }\r\n            }\r\n            return o\r\n        }\r\n    }\r\n\r\n    getUrlIcon(icon: string) {\r\n        let url = \"\";\r\n        for (const [key, value] of Object.entries(iconsUrl)) {\r\n            if (icon === key) {\r\n                url = value;\r\n            }\r\n        }\r\n        return url;\r\n    }\r\n\r\n// fullNamesCountry - json объект с полным и сокращенным зазванием стран по стандарту iso3166\r\n    setCountry(abr: string, fullNamesCountry: any) {\r\n        for (let i = 0; i < fullNamesCountry.length; i++) {\r\n            if (abr === fullNamesCountry[i].alpha2) {\r\n                this.country = fullNamesCountry[i].english;\r\n                this.countryRu = fullNamesCountry[i].name\r\n            }\r\n        }\r\n    }\r\n\r\n//list - массив с температурными данными (температура в кельвинах, давление, влажность, видимость, направление ветра в градусах ...)\r\n    setWeatherList(list: listType) {\r\n        const ONE_hPa = 0.75;\r\n        this.weatherList.push({\r\n            clouds: list.clouds,\r\n            dt: list.dt,\r\n            dt_txt: list.dt_txt,\r\n            sys: list.sys,\r\n            visibility: list.visibility / 1000,\r\n            main: {\r\n                feels_like: converterTemperature(list.main.feels_like, true),\r\n                humidity: list.main.humidity,\r\n                pressure: Math.round(list.main.pressure * ONE_hPa),\r\n                temp: converterTemperature(list.main.temp, true),\r\n                temp_max: converterTemperature(list.main.temp_max, true),\r\n                temp_min: converterTemperature(list.main.temp_min, true)\r\n            },\r\n            weather: [{\r\n                description: list.weather[0].description,\r\n                icon: this.getUrlIcon(list.weather[0].icon),\r\n                id: list.weather[0].id,\r\n                main: list.weather[0].main\r\n            }],\r\n            wind: {\r\n                deg: this.getWindDirection(list.wind.deg),\r\n                gust: list.wind.gust,\r\n                speed: list.wind.speed\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {Weather} from \"./classWeather\";\r\nimport fullNamesCountry from '../iso.json';\r\n\r\nexport const mapper = (response:any) => {\r\n    let data = new Weather();\r\n    data.setCountry(response.city.country, fullNamesCountry);\r\n    data.cityName = response.city.name;\r\n    data.timezone = response.city.timezone;\r\n    data.coordinates.latitude = response.city.coord.lat;\r\n    data.coordinates.longitude = response.city.coord.lon;\r\n    for (let i = 0; i < response.list.length; i++) {\r\n        data.setWeatherList(response.list[i])\r\n    }\r\n    return data\r\n};\r\n\r\n","import {BaseThuncType, InferActionType} from \"./store\";\r\nimport {ServerRequest} from \"../api/api\";\r\nimport {mapper} from \"./mapper\";\r\nimport {getDate} from \"../utils/getDate\";\r\n\r\nexport type ActionsType = InferActionType<typeof actions>;\r\ntype ThuncType = BaseThuncType<ActionsType>;\r\n\r\nexport const actions = {\r\n    changeLanguage: (lang: string) => ({type: \"SET_LANG\", lang} as const),\r\n    changeUnitTemp: (cels: boolean) => ({type: \"SET_UNIT_TEMP\", cels} as const),\r\n    setDataWeather: (data: any) => ({type: \"SET_DATA_WEATHER\", data} as const),\r\n    setMessage: (mess: string) => ({type: \"SET_MESSAGE\", mess} as const),\r\n    setUserLocal: (lat: number, lon: number,date:{en:string, ru:string}) => ({\r\n        type: \"SET_USER_LOCATION\",\r\n        coord: {lat, lon},\r\n        date: date\r\n    } as const),\r\n    initialisation: (init: boolean) => ({type: \"SET_INITIALISATION\", init} as const),\r\n};\r\n\r\n\r\nexport const getWeather = (latitude: number | null = null, longitude: number | null = null, cityName: string | null = null): ThuncType => async (dispatch) => {\r\n    let response;\r\n    //получаем массив с погодными данными (https://openweathermap.org/api)\r\n    if (latitude !== null && longitude !== null) {\r\n        response = await ServerRequest.getInstance().getWeatherForCoord(latitude, longitude);// данные о погоде по текущим координатам пользователя\r\n\r\n    } else if (cityName !== null) {\r\n        response = await ServerRequest.getInstance().getWeatherForCityName(cityName);// данные о погоде по названию города\r\n\r\n    }\r\n    if (response.cod === '200') {\r\n        dispatch(actions.initialisation(true));\r\n        dispatch(actions.setDataWeather(mapper(response)));\r\n    } else {\r\n        dispatch(actions.setMessage(response.message))\r\n    }\r\n\r\n};\r\n\r\nexport const setUserLocation = (lat: number, lon: number, timestamp: number): ThuncType => async (dispatch) => {\r\n    //console.log(getDate(timestamp))\r\n    dispatch(actions.setUserLocal(lat, lon, getDate(timestamp)));\r\n};\r\n\r\nexport const setLang = (lang:string): ThuncType => async (dispatch) => {\r\n    dispatch(actions.changeLanguage(lang));\r\n};\r\nexport const setUnitTemp = (cels:boolean): ThuncType => async (dispatch) => {\r\n    dispatch(actions.changeUnitTemp(cels));\r\n};","import React from \"react\";\r\nimport classes from './Preloader.module.css';\r\n\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className={classes.block}>\r\n           идет загрузка данных...\r\n        </div>\r\n    )\r\n};\r\nexport default Preloader;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\n\r\nexport const Page404 = () =>{\r\n\r\n    return(\r\n        <div>\r\n            <p>\r\n                This is not the page that you are looking for!\r\n                <Link to='/'>Go Home</Link>\r\n            </p>\r\n        </div>\r\n    )\r\n};","import React, {Component} from 'react';\nimport './style.css';\nimport {Header} from \"./components/header/Header\";\nimport {Route} from \"react-router\";\nimport loadable from 'react-loadable';\nimport {AppStateType} from \"./redux/store\";\nimport {connect} from \"react-redux\";\nimport {getWeather, setUserLocation, setLang, setUnitTemp} from \"./redux/actionCreator\";\nimport Preloader from \"./components/Preloader/Preloader\";\nimport {Page404} from \"./pages/404Page/Page404\";\nimport {Switch} from 'react-router-dom';\nimport i18next from \"i18next\";\n\n\ninterface IMyComponentState {\n}\n\ntype mapStatePropsType = ReturnType<typeof mapStateToProps>\ntype mapDispatchPropsType = {\n    getWeather: (lat?: number | null, lon?: number | null, name?: string | null,) => void\n    setUserLocation: (lat: number, lon: number, timestamp: number) => void\n    setLang: any\n    setUnitTemp: (cels: boolean) => void\n}\n\nconst AsyncPages = {\n    StartPage: loadable({\n        loader: () => import('./pages/startPage/StartPage'),\n        loading: Preloader\n    })\n};\n\nclass App extends Component<mapDispatchPropsType & mapStatePropsType, IMyComponentState> {\n    constructor(props: any) {\n        super(props);\n        this.state = {};\n    }\n\n    setLanguage = (language: string) => {\n        i18next.init({\n            lng: language,\n            resources: require(`./${language}.json`)\n        });\n        this.props.setLang(language)\n    };\n\n\n    componentDidMount(): void {\n        this.setLanguage(this.props.lang);\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition((position) => {\n                this.props.setUserLocation(position.coords.latitude, position.coords.longitude, position.timestamp);\n            })\n        }\n    }\n\n    componentDidUpdate(prevProps: Readonly<mapDispatchPropsType & mapStatePropsType>, prevState: Readonly<{}>, snapshot?: any): void {\n        if (this.props.coordUserLocation.lat !== prevProps.coordUserLocation.lat && this.props.coordUserLocation.lon !== prevProps.coordUserLocation.lon)\n            this.props.getWeather(this.props.coordUserLocation.lat, this.props.coordUserLocation.lon, null);\n    }\n\n    handleOnClickChangeBg = () => {\n        let element = document.querySelector('.app');\n        element !== null && element.setAttribute(\"style\", `background-image: url(\"weather/bgImg/${this.props.bgImgs[Math.floor(Math.random() * this.props.bgImgs.length)]}\")`);\n    };\n    handleOnSelect = (lang: string) => {\n        this.setLanguage(lang)\n    };\n\n\n    render() {\n        if (!this.props.initialization) {\n            return <Preloader/>\n        }\n\n        return (\n            <div className=\"app\">\n                <Header handleOnClick={this.handleOnClickChangeBg}\n                        getWeather={this.props.getWeather}\n                        setLanguage={this.handleOnSelect}\n                        setUnitTemp={this.props.setUnitTemp}\n                />\n                <Switch>\n                    <Route exact path='/' render={() =>\n                        <AsyncPages.StartPage\n                            dataWeather={this.props.dataWeather}\n                            date={this.props.date}\n                            lang={this.props.lang}\n                            celsius={this.props.celsius}\n                        />}/>\n                    <Route path={'*'} render={() => <Page404/>}/>\n                </Switch>\n\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: AppStateType) => ({\n    coordUserLocation: state.app.coordUserLocation,\n    dataWeather: state.app.dataWeather,\n    date: state.app.currentData,\n    initialization: state.app.inicialization,\n    bgImgs: state.app.bgImgs,\n    lang: state.app.languageApp,\n    celsius: state.app.celsius\n});\n\nexport default connect(mapStateToProps, {\n    setUserLocation, getWeather, setLang, setUnitTemp\n})\n(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {ActionsType} from \"./actionCreator\";\r\n\r\n\r\nlet initialState = {\r\n    celsius: true,\r\n    languageApp: \"en\",\r\n    dataWeather: {\r\n        coordinates: {latitude: 0, longitude: 0},\r\n        country: '',\r\n        countryRu: '',\r\n        cityName: '',\r\n        timezone: 0,\r\n        sunrise: '',\r\n        sunset: '',\r\n        weatherList: [],\r\n    },\r\n    messageError: '',\r\n    coordUserLocation: {\r\n        lat: 0,\r\n        lon: 0\r\n    },\r\n    currentData: {\r\n        en: '',\r\n        ru: ''\r\n    },\r\n    inicialization: false,\r\n    bgImgs: [\"P1018313.jpg\", \"P1019640.jpg\", \"P1019641.jpg\", \"IMGP3552.jpg\", \"IMGP3539.jpg\"]\r\n};\r\nexport type initialStateType = typeof initialState;\r\n\r\n\r\nconst reducer = (state = initialState, action: ActionsType): initialStateType => {\r\n    switch (action.type) {\r\n        case \"SET_DATA_WEATHER\":\r\n            return {\r\n                ...state,\r\n                dataWeather: action.data\r\n            };\r\n        case \"SET_MESSAGE\":\r\n            return {\r\n                ...state,\r\n                messageError: action.mess\r\n            };\r\n\r\n        case \"SET_USER_LOCATION\":\r\n            return {\r\n                ...state,\r\n                coordUserLocation: action.coord,\r\n                currentData: action.date,\r\n            };\r\n        case \"SET_INITIALISATION\":\r\n            return {\r\n                ...state,\r\n                inicialization: true\r\n            };\r\n        case \"SET_LANG\":\r\n            return {\r\n                ...state,\r\n                languageApp: action.lang\r\n            };\r\n        case \"SET_UNIT_TEMP\":\r\n            return {\r\n                ...state,\r\n                celsius: action.cels\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n\r\n","import {Action, applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport thunkMiddleware, {ThunkAction} from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport reducer from \"./reducer\";\r\n\r\n\r\n\r\n\r\n\r\nlet reducers = combineReducers(\r\n    {\r\n        form: formReducer,\r\n        app: reducer\r\n    }\r\n);\r\ntype RootReduserType = typeof reducers;\r\nexport type AppStateType = ReturnType<RootReduserType>;\r\n\r\n\r\ntype PropertyTypes<T> = T extends {[key: string]: infer U} ?U : never\r\nexport  type InferActionType<T extends {[key: string]:(...args:any[])=>any}> = ReturnType<PropertyTypes<T>>\r\n\r\nexport type BaseThuncType<AT extends Action, TH=Promise<void> >= ThunkAction<TH,AppStateType, unknown, AT>\r\n\r\n//@ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__|| compose;\r\nconst store = createStore(reducers, composeEnhancers(\r\n    applyMiddleware(thunkMiddleware)\r\n));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter} from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export  const converterTemperature = (temp:number, kelvin=false) => {\r\n    let ABSOLUT_ZERO =  -273.15;\r\n    let n = 1.8;\r\n    let FREEZING_POINT_OF_WATER = 32;\r\n    return  (kelvin) ? Math.round(temp - (-ABSOLUT_ZERO)) : Math.round((temp*n)+FREEZING_POINT_OF_WATER);\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"FormControls_input__1eFDN\",\"error\":\"FormControls_error__31xIz\",\"spanError\":\"FormControls_spanError__1AjRd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__agGeW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"search_form__13b1y\"};"],"sourceRoot":""}